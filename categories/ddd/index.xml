<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DDD on Pilgrim Style</title>
    <link>https://pilgrim-lifestyle.jp/categories/ddd/</link>
    <description>Recent content in DDD on Pilgrim Style</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Feb 2020 11:07:47 +0900</lastBuildDate>
    
	<atom:link href="https://pilgrim-lifestyle.jp/categories/ddd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>なぜ良いソースを書く必要があるのか</title>
      <link>https://pilgrim-lifestyle.jp/blog/009_%E3%81%AA%E3%81%9C%E8%89%AF%E3%81%84%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E6%9B%B8%E3%81%8F%E5%BF%85%E8%A6%81%E3%81%8C%E3%81%82%E3%82%8B%E3%81%AE%E3%81%8B/</link>
      <pubDate>Sun, 02 Feb 2020 11:07:47 +0900</pubDate>
      
      <guid>https://pilgrim-lifestyle.jp/blog/009_%E3%81%AA%E3%81%9C%E8%89%AF%E3%81%84%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E6%9B%B8%E3%81%8F%E5%BF%85%E8%A6%81%E3%81%8C%E3%81%82%E3%82%8B%E3%81%AE%E3%81%8B/</guid>
      <description>Webナイト宮崎 Vol.8　～てげ良いコード書きたい～ に参加しました 宮崎で8回目のLT大会に登壇してきました。 仕事で遅れ、発表順を最後にしてもったあげく、ギリギリの参加となってしまい、他の方のLTが聴けなかったのが残念。
スライドはこちら
良いコードに正解はあるか
制限時間5分のところ、10分喋ってしまいましたが、喋り足りなかったので(!?)、こちら少し補足します。
なぜを考える大切さ 冒頭では、なぜ良いコードを書きたいのか?</description>
    </item>
    
    <item>
      <title>ドメイン駆動設計のための静的型付き言語のすすめ</title>
      <link>https://pilgrim-lifestyle.jp/blog/002_%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E9%A7%86%E5%8B%95%E8%A8%AD%E8%A8%88%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E9%9D%99%E7%9A%84%E5%9E%8B%E4%BB%98%E3%81%8D%E8%A8%80%E8%AA%9E%E3%81%AE%E3%81%99%E3%81%99%E3%82%81/</link>
      <pubDate>Tue, 10 Dec 2019 10:07:47 +0600</pubDate>
      
      <guid>https://pilgrim-lifestyle.jp/blog/002_%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E9%A7%86%E5%8B%95%E8%A8%AD%E8%A8%88%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E9%9D%99%E7%9A%84%E5%9E%8B%E4%BB%98%E3%81%8D%E8%A8%80%E8%AA%9E%E3%81%AE%E3%81%99%E3%81%99%E3%82%81/</guid>
      <description>この記事はQiitaに書こうと思っている記事を先行で公開しています。
ドメイン駆動設計も随分と浸透してきたと思うこのごろ。
でも、未だに動的型付き言語で頑張っている（弊社含め）現場も多く、今回は静的型付き言語について語ろうかと。
そもそもWebアプリの業界では単純にPHPやRuby、Pythonなど動的片付け言語で頑張る現場が圧倒的に多いかと思います。
しかし、ドメイン駆動設計を実践していくと、ある事実が襲ってきます。それはドメイン駆動設計は「型」の世界で成り立っているということ。
実践するにあたって、まず最初に乗り越える壁がレイヤアーキテクチャだったりするので、なかなか難しいと思いますが、 本質的な部分は当然モデル。EntityであったValueObjectであるわけです。
もちろん、動的型付きの言語でもモデルは書けます。弊社でもPython3の型ヒントを駆使してモデルを書いています。
ただ、モデルとは何かを考えてみていただきたい。
 モデルとは、プロジェクトに携わる人々の頭のなかで構築された概念の集まりであり、ドメインについての洞察を反映した、用語と概念間の関係性からできている。(エリックエヴァンスのドメイン駆動設計 第一部第二章 コミュニケーションと言語の使い方 より)</description>
    </item>
    
  </channel>
</rss>